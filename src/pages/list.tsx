import Head from 'next/head'
import React, { useEffect, useState } from 'react'
import { api } from '../utils/api'
import { Ingredient } from '@prisma/client'
import { Checkbox } from '../components/Checkbox'
import { Button } from '../components/Button'

export default function ListRoute() {
  return (
    <>
      <Head>
        <title>Listy - List</title>
        <meta name='description' content='Generated by create-t3-app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <div className='prose'>
        <ListByUserId />
      </div>
    </>
  )
}
export function ListByUserId() {
  const { data, status } = api.list.byUserId.useQuery()

  if (status === 'error') {
    return <p>Something went wrong...</p>
  }

  if (status === 'success') {
    if (!data || !data.ingredients.length) {
      return <p>Your list is empty</p>
    }

    return <List data={data.ingredients} />
  }

  return <p className=''>Loading...</p>
}

type Checked = Record<string, boolean>

function List({ data }: { data: Ingredient[] }) {
  const utils = api.useContext()
  const { mutate, isLoading } = api.list.clear.useMutation({
    onSuccess() {
      utils.list.invalidate()
      localStorage.checked = JSON.stringify({})
    }
  })
  const initialChecked: Checked = {}

  data.forEach((i) => (initialChecked[i.id] = false))

  const [checked, setChecked] = useState(
    typeof localStorage.checked === 'string' && localStorage.checked.length > 2
      ? (JSON.parse(localStorage.checked) as Checked)
      : initialChecked
  )
  const allChecked = Object.values(checked).every(Boolean)

  const handleCheck = (event: React.ChangeEvent<HTMLInputElement>) => {
    setChecked((state) => ({
      ...state,
      [event.target.id]: event.target.checked
    }))
  }
  const handleCheckAll = () => {
    if (allChecked) {
      setChecked(initialChecked)
    } else {
      for (const id in checked) {
        console.log('id', id)
        setChecked((state) => ({ ...state, [id]: true }))
      }
    }
  }

  const handleClearList = () => {
    const ingredientsIds = data.map((i) => ({ id: i.id }))
    mutate(ingredientsIds)
  }

  useEffect(() => {
    localStorage.checked = JSON.stringify(checked)
  }, [checked])

  return (
    <div className=''>
      <h1>Your ingredients list</h1>
      <div className=''>
        <Checkbox
          checked={allChecked}
          id='all-checked'
          label={'Check all'}
          onChange={handleCheckAll}
        />
      </div>
      <div className=''>
        {data.map((i) => (
          <Checkbox
            key={i.id}
            checked={checked[i.id]}
            id={i.id.toString()}
            label={i.name}
            onChange={handleCheck}
          />
        ))}
      </div>
      <Button
        isLoading={isLoading}
        disabled={!allChecked}
        onClick={handleClearList}
      >
        Clear list
      </Button>
    </div>
  )
}
