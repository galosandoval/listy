import Head from 'next/head'
import Layout from './layout'
import { dehydrate, QueryClient, useQuery } from '@tanstack/react-query'
import * as http from '../client'
import { Recipe } from '@prisma/client'

const recipeKeys = {
  all: ['recipes'] as const
}

type RequestBody = {
  userId: number
}

type ResponseBody = {
  recipe: Recipe
}

const recipeMock = {
  userId: 1
}

const fetchRecipes = () =>
  http.post<RequestBody, ResponseBody[]>(
    'http://localhost:3000/api/recipes',
    recipeMock
  )

export async function getServerSideProps() {
  const queryClient = new QueryClient()
  await queryClient.prefetchQuery(recipeKeys.all, fetchRecipes)

  return {
    props: {
      dehydratedState: dehydrate(queryClient)
    }
  }
}

export default function Dashboard() {
  const {
    data: recipes,
    isError,
    isSuccess
  } = useQuery({
    queryKey: recipeKeys.all,
    queryFn: fetchRecipes
  })

  if (isError) {
    return 'Something went wrong'
  }

  if (isSuccess) {
    const recentRecipes = recipes.map((item) => (
      <div key={item.recipe.id} className=''>
        <h3 className=''>{item.recipe.name}</h3>
      </div>
    ))
    return (
      <>
        <Head>
          <title>Listy - Dashboard</title>
          <meta name='description' content='Generated by create-t3-app' />
          <link rel='icon' href='/favicon.ico' />
        </Head>
        <Layout>
          <main className='text-white container mx-auto flex flex-col items-center justify-center min-h-screen'>
            <div className=''>
              <h1 className=''>recent lists</h1>
              {recentRecipes}
            </div>
          </main>
        </Layout>
      </>
    )
  }

  return 'is loading..'
}
